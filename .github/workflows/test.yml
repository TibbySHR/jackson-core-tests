name: Maven tests with JaCoCo Coverage and HTML Report for Untested Classes

on:
  pull_request:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the code from the repository
      - uses: actions/checkout@v4

      # Step 2: Set up JDK 17 for the environment
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Step 3: Run Maven tests and generate JaCoCo reports
      - name: Run Maven tests and generate JaCoCo report
        run: mvn clean verify

      # Step 4: Get JaCoCo Coverage
      - name: Get JaCoCo Coverage
        id: coverage  
        run: |
          coverage=$(python3 config/coverage.py target/site/jacoco/jacoco.csv) 
          echo "COVERAGE=$coverage" >> $GITHUB_ENV
          echo "Coverage: $coverage%"

      # Step 5: Find classes not fully covered by tests and generate an HTML file
      - name: Generate HTML for untested classes
        run: |
          grep '<counter type="INSTRUCTION" missed="[1-9]' target/site/jacoco/jacoco.xml | sed -n 's/.*name="\(.*\)" .*missed=".*"/\1/p' > untested-classes.txt
          if [ -s untested-classes.txt ]; then
            echo "<html><head><title>Untested Classes</title></head><body><h1>Untested Classes</h1><ul>" > untested-classes.html
            while read class; do
              echo "<li>$class</li>" >> untested-classes.html
            done < untested-classes.txt
            echo "</ul></body></html>" >> untested-classes.html
          else
            echo "<html><head><title>Untested Classes</title></head><body><h1>All classes have been fully tested</h1></body></html>" > untested-classes.html
          fi

      # Step 6: Fail if coverage has not improved or if untested classes are found
      - name: Fail if coverage has not improved or untested classes found
        run: |
          coverage=$COVERAGE
          threshold=81.58
          if (( $(echo "$coverage - $threshold <= 0.1" | bc -l) )); then
            echo "Coverage has not improved."
            exit 1
          fi

          if [ -s untested-classes.txt ]; then
            echo "Failing because the following classes are untested:"
            cat untested-classes.txt
            exit 1
          else
            echo "No untested classes found."
          fi

      # Step 7: Upload JaCoCo coverage report and untested classes list as artifacts
      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: target/site/jacoco

      # Step 8: Upload HTML file for untested classes as an artifact
      - name: Upload HTML file of untested classes
        uses: actions/upload-artifact@v2
        with:
          name: untested-classes-html
          path: untested-classes.html
